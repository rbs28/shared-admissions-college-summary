---
AWSTemplateFormatVersion: "2010-09-09"

Description: >
  Build infrastructure for responders
  for College Summary API using
  Scatter-Gather pattern

Parameters: 
  ConfigStackName:
    Description: >
      Name of a CloudFormation Stack that contains
      configuration for this API
    Type: "String"
    MinLength: 1
    MaxLength: 255
    AllowedPattern: "[a-zA-Z][-a-zA-Z0-9]*"
    Default: "SharedAdmissionsCollegeSummaryConfigStack"
  SummaryTableName:
    Description: "Table name in DynamoDB to store college summaries"
    Type: "String"

Resources: 
  AlertTopic:
    Type: "AWS::SNS::Topic"
    Properties: 
      DisplayName: "shared-admissions-college-summary-alert-topic"
  ResponseTopic:
    Type: "AWS::SNS::Topic"
    Properties: 
      DisplayName: "shared-admissions-college-summary-response-topic"
  SummaryTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      AttributeDefinitions:
        - AttributeName: "Id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "Id"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
      TableName: !Ref SummaryTableName
  SummaryRole:
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "lambda.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/cesSharedAdmissions/collegeSummary/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyDocument:
            Version: "2012-10-17"
            Statement: 
              - 
                Effect: "Allow"
                Action:
                  - "sns:ConfirmSubscription"
                  - "sns:GetEndpointAttributes"
                  - "sns:GetPlatformApplicationAttributes"
                  - "sns:GetSubscriptionAttributes"
                  - "sns:GetTopicAttributes"
                  - "sns:ListEndpointsByPlatformApplication"
                  - "sns:ListPlatformApplications"
                  - "sns:ListSubscriptions"
                  - "sns:ListSubscriptionsByTopic"
                  - "sns:ListTopics"
                  - "sns:Publish"
                  - "sns:SetSubscriptionAttributes"
                  - "sns:Subscribe"
                  - "sns:Unsubscribe"
                Resource:
                  - !Ref AlertTopic
                  - !Ref ResponseTopic
              -
                Effect: "Allow"
                Action:
                  - "dynamodb:GetItem"
                  - "dynamodb:PutItem"
                  - "dynamodb:DeleteItem"
                  - "dynamodb:DescribeTable"
                  - "dynamodb:ListTables"
                  - "dynamodb:Query"
                  - "dynamodb:Scan"
                  - "dynamodb:UpdateItem"
                Resource: "*"
          PolicyName: "accessCollegeSummaryResources"
  SummaryResponder:
    Type: "AWS::Lambda::Function"
    Properties: 
      Code:
        S3Bucket: 
          Fn::ImportValue:
            !Sub "${ConfigStackName}-BucketName"
        S3Key: "SummaryResponderLambda.zip"
      Description: Retrieve from Dynamo Store
      Environment:
        Variables:
          ALERT_TOPIC_ARN: !Ref AlertTopic
          TABLE_NAME: !Ref SummaryTableName
      Handler: "index.handler"
      Role: !GetAtt SummaryRole.Arn
      Runtime: "nodejs6.10"
      Timeout: 300
  RequestTopic:
    Type: "AWS::SNS::Topic"
    Properties: 
      DisplayName: "shared-admissions-college-summary-request-topic"
      Subscription:
        - Endpoint: !GetAtt SummaryResponder.Arn
          Protocol: "lambda"
  RequestSummaryResponderPermissions:
    Type: "AWS::Lambda::Permission"
    Properties: 
      Action: "lambda:InvokeFunction"
      FunctionName: !GetAtt SummaryResponder.Arn
      Principal: "sns.amazonaws.com"
      SourceArn: !Ref RequestTopic
# The service here must be ec2 for some reason, if it's elasticbeanstalk, the instances created will
# not start
  EBAccessRole:
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "ec2.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/cesSharedAdmissions/collegeSummary/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonElastiCacheFullAccess"
        - "arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier"
        - "arn:aws:iam::aws:policy/AWSElasticBeanstalkWorkerTier"
        - "arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkEnhancedHealth"
      Policies:
        - PolicyDocument:
            Version: "2012-10-17"
            Statement: 
              - 
                Effect: "Allow"
                Action:
                  - "sns:ConfirmSubscription"
                  - "sns:GetEndpointAttributes"
                  - "sns:GetPlatformApplicationAttributes"
                  - "sns:GetSubscriptionAttributes"
                  - "sns:GetTopicAttributes"
                  - "sns:ListEndpointsByPlatformApplication"
                  - "sns:ListPlatformApplications"
                  - "sns:ListSubscriptions"
                  - "sns:ListSubscriptionsByTopic"
                  - "sns:ListTopics"
                  - "sns:Publish"
                  - "sns:SetSubscriptionAttributes"
                  - "sns:Subscribe"
                  - "sns:Unsubscribe"
                Resource:
                  - !Ref AlertTopic
                  - !Ref RequestTopic
                  - !Ref ResponseTopic
          PolicyName: "accessCollegeSummaryTopics"

Outputs: 
  AggregatorRoleName:
    Description: Name of Role to use for aggregator component
    Value: !Ref EBAccessRole
    Export:
      Name: !Sub "${AWS::StackName}-AggregatorRole"

